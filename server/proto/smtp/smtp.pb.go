// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: smtp/smtp.proto

package smtp

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InboxKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName       string `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	PublicKey         string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	EmailHash         string `protobuf:"bytes,3,opt,name=emailHash,proto3" json:"emailHash,omitempty"`
	EncryptedEmailKey string `protobuf:"bytes,4,opt,name=encryptedEmailKey,proto3" json:"encryptedEmailKey,omitempty"`
}

func (x *InboxKeys) Reset() {
	*x = InboxKeys{}
	mi := &file_smtp_smtp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InboxKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboxKeys) ProtoMessage() {}

func (x *InboxKeys) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboxKeys.ProtoReflect.Descriptor instead.
func (*InboxKeys) Descriptor() ([]byte, []int) {
	return file_smtp_smtp_proto_rawDescGZIP(), []int{0}
}

func (x *InboxKeys) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *InboxKeys) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *InboxKeys) GetEmailHash() string {
	if x != nil {
		return x.EmailHash
	}
	return ""
}

func (x *InboxKeys) GetEncryptedEmailKey() string {
	if x != nil {
		return x.EncryptedEmailKey
	}
	return ""
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From          string       `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            []string     `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	Body          []byte       `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Version       string       `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	MessageId     string       `protobuf:"bytes,8,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Encrypted     bool         `protobuf:"varint,9,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Challenge     string       `protobuf:"bytes,10,opt,name=challenge,proto3" json:"challenge,omitempty"`
	InboxKeys     []*InboxKeys `protobuf:"bytes,11,rep,name=inboxKeys,proto3" json:"inboxKeys,omitempty"`
	FromDomainPID string       `protobuf:"bytes,12,opt,name=fromDomainPID,proto3" json:"fromDomainPID,omitempty"`
	FromUserId    uint64       `protobuf:"varint,13,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	FromDomainId  uint64       `protobuf:"varint,14,opt,name=fromDomainId,proto3" json:"fromDomainId,omitempty"`
	PublicKey     string       `protobuf:"bytes,15,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	mi := &file_smtp_smtp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_smtp_smtp_proto_rawDescGZIP(), []int{1}
}

func (x *Email) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Email) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Email) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Email) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Email) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Email) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *Email) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *Email) GetInboxKeys() []*InboxKeys {
	if x != nil {
		return x.InboxKeys
	}
	return nil
}

func (x *Email) GetFromDomainPID() string {
	if x != nil {
		return x.FromDomainPID
	}
	return ""
}

func (x *Email) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *Email) GetFromDomainId() uint64 {
	if x != nil {
		return x.FromDomainId
	}
	return 0
}

func (x *Email) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type SendEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success                    bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	RecipientNotFound          bool   `protobuf:"varint,3,opt,name=recipientNotFound,proto3" json:"recipientNotFound,omitempty"`
	RecipientEncryptionSupport bool   `protobuf:"varint,4,opt,name=recipientEncryptionSupport,proto3" json:"recipientEncryptionSupport,omitempty"`
}

func (x *SendEmailResponse) Reset() {
	*x = SendEmailResponse{}
	mi := &file_smtp_smtp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailResponse) ProtoMessage() {}

func (x *SendEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_smtp_smtp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailResponse.ProtoReflect.Descriptor instead.
func (*SendEmailResponse) Descriptor() ([]byte, []int) {
	return file_smtp_smtp_proto_rawDescGZIP(), []int{2}
}

func (x *SendEmailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendEmailResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SendEmailResponse) GetRecipientNotFound() bool {
	if x != nil {
		return x.RecipientNotFound
	}
	return false
}

func (x *SendEmailResponse) GetRecipientEncryptionSupport() bool {
	if x != nil {
		return x.RecipientEncryptionSupport
	}
	return false
}

var File_smtp_smtp_proto protoreflect.FileDescriptor

var file_smtp_smtp_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x6d, 0x74, 0x70, 0x2f, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x73, 0x6d, 0x74, 0x70, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x62, 0x6f,
	0x78, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4b, 0x65,
	0x79, 0x22, 0xea, 0x02, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x6e, 0x62, 0x6f, 0x78,
	0x4b, 0x65, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6d, 0x74,
	0x70, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x09, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x50, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xb1,
	0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x32, 0x40, 0x0a, 0x0b, 0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x31, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0b,
	0x2e, 0x73, 0x6d, 0x74, 0x70, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x17, 0x2e, 0x73, 0x6d,
	0x74, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x47, 0x72, 0x7a, 0x65, 0x67, 0x6f, 0x72, 0x7a, 0x4d, 0x61, 0x6e, 0x69, 0x61,
	0x6b, 0x2f, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6d, 0x74, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_smtp_smtp_proto_rawDescOnce sync.Once
	file_smtp_smtp_proto_rawDescData = file_smtp_smtp_proto_rawDesc
)

func file_smtp_smtp_proto_rawDescGZIP() []byte {
	file_smtp_smtp_proto_rawDescOnce.Do(func() {
		file_smtp_smtp_proto_rawDescData = protoimpl.X.CompressGZIP(file_smtp_smtp_proto_rawDescData)
	})
	return file_smtp_smtp_proto_rawDescData
}

var file_smtp_smtp_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_smtp_smtp_proto_goTypes = []any{
	(*InboxKeys)(nil),         // 0: smtp.InboxKeys
	(*Email)(nil),             // 1: smtp.Email
	(*SendEmailResponse)(nil), // 2: smtp.SendEmailResponse
}
var file_smtp_smtp_proto_depIdxs = []int32{
	0, // 0: smtp.Email.inboxKeys:type_name -> smtp.InboxKeys
	1, // 1: smtp.SmtpService.SendEmail:input_type -> smtp.Email
	2, // 2: smtp.SmtpService.SendEmail:output_type -> smtp.SendEmailResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_smtp_smtp_proto_init() }
func file_smtp_smtp_proto_init() {
	if File_smtp_smtp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_smtp_smtp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_smtp_smtp_proto_goTypes,
		DependencyIndexes: file_smtp_smtp_proto_depIdxs,
		MessageInfos:      file_smtp_smtp_proto_msgTypes,
	}.Build()
	File_smtp_smtp_proto = out.File
	file_smtp_smtp_proto_rawDesc = nil
	file_smtp_smtp_proto_goTypes = nil
	file_smtp_smtp_proto_depIdxs = nil
}
